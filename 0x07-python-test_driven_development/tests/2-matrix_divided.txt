The 2-matrix_divided module
===============================

Using ``matrix_divided``
------------------------

First import ``matrix_divided`` from 2-matrix_divided module

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix = [[2, 4, 6], [8, 10, 12]]
    >>> print(matrix_divided(matrix, 2))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    >>> print(matrix_divided(matrix, "str"))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
    >>> print(matrix_divided(matrix, [1, 2, 3]))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
    >>> print(matrix_divided([[1, 2, 3], [4, 5]], 2))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size
    >>> print(matrix_divided("str", 2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> print(matrix_divided([2, 4, 6], 2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> print(matrix_divided([[2, 4, 6], ["a", 7, 8]], 2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    >>> print(matrix_divided(6, 2))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
